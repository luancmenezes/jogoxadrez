package jogoxadrez.telas;

import java.awt.Color;
import java.awt.Point;
import java.util.ArrayList;
import javax.swing.JButton;
import jogoxadrez.modelos.pecas.*;


/**
 * @author  Pedro Kislansky e Luís Lima
 * @version 1.0
 */
public class Tabuleiro extends javax.swing.JPanel {
    private FramePrincipal fp;
    private ArrayList<JButton> pecas;
    private JButton peca=null;
    private int contador;
    private int contadorCorTabuleiro;
    private int x;
    private int y;
    
    /** Creates new form Tabuleiro */
    public Tabuleiro(FramePrincipal fp) {
        initComponents();
        contador=1;
        contadorCorTabuleiro=1;
        x=0;
        y=0;
        pecas=new ArrayList<JButton>();
        this.construirTabuleiroXadrez();
        this.fp=fp;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(51, 102, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void construirTabuleiroXadrez(){
        
       construirPrimeiraUltimaLinha('p');
       construirLinhaPeos('p');
       construirLinhasEmBranco();
       construirLinhaPeos('b');
       construirPrimeiraUltimaLinha('b');
       this.pintarTabuleiro();
       
    }
    
    private void pintarTabuleiro(){
        int i=0;
        int j=0;
        int incremento=0;
        while(i<8){
            while(j<8){
                if(i%2==0){
                    if(j%2==0){
                        this.pecas.get(i+(j+incremento)).setBackground(new Color(238,238,238));
                    }else{
                        this.pecas.get(i+(j+incremento)).setBackground(new Color(255,255,255));
                    }
                }else{
                    if(j%2==0){
                        this.pecas.get(i+(j+incremento)).setBackground(new Color(255,255,255));                        
                    }else{
                        this.pecas.get(i+(j+incremento)).setBackground(new Color(238,238,238));
                    }
                }
                j++;
            }
            j=0;
            i++;
            incremento+=7;
        }
        this.repaint();
    }
    
    private void construirPrimeiraUltimaLinha(char cor){

        if(cor=='p'){
            adicionarAoTabuleiro(new PecaTorreBranco());
            adicionarAoTabuleiro(new PecaCavaloBranco());
            adicionarAoTabuleiro(new PecaBispoBranco());
            adicionarAoTabuleiro(new PecaReiBranco());
            adicionarAoTabuleiro(new PecaRainhaBranco());
            adicionarAoTabuleiro(new PecaBispoBranco());
            adicionarAoTabuleiro(new PecaCavaloBranco());
            adicionarAoTabuleiro(new PecaTorreBranco());
        }else{
            adicionarAoTabuleiro(new PecaTorrePreto());
            adicionarAoTabuleiro(new PecaCavaloPreto());
            adicionarAoTabuleiro(new PecaBispoPreto());
            adicionarAoTabuleiro(new PecaReiPreto());
            adicionarAoTabuleiro(new PecaRainhaPreto());
            adicionarAoTabuleiro(new PecaBispoPreto());
            adicionarAoTabuleiro(new PecaCavaloPreto());
            adicionarAoTabuleiro(new PecaTorrePreto());            
        }

    }
    
    private void construirLinhaPeos(char cor){
        
        for(int i=0;i<8;i++){
            if(cor=='p'){
                adicionarAoTabuleiro(new PecaPeaoBranco());
            }else{
                adicionarAoTabuleiro(new PecaPeaoPreto());
            }
        }
        
    }
    
    private void construirLinhasEmBranco(){
        for(int i=0;i<32;i++){
            adicionarAoTabuleiro(new PecaVazia());
        }
    }
    
    private void adicionarAoTabuleiro(JButton peca){
        peca.setLocation(new Point(x,y));
        peca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionPerformed(evt);
            }
        });
        
        if(contador%8!=0){
            x+=50;
        }else{ 
            x=0;
            y+=50;
        }
        contadorCorTabuleiro++;
        this.add(peca);
        pecas.add(peca);
        contador++;
    }
   
    private void ActionPerformed(java.awt.event.ActionEvent evt) {
        JButton pecaClicada=(JButton)evt.getSource();
        if(fp.getJogada().getJogadaRecente()==-1){
            if(pecaClicada.getClass().toString().contains(fp.getJogadores().get(fp.getJogadorDaVez()).getPeca())){
                this.iluminaCaminho(pecaClicada);
            }
        }else{
            this.movePeca(pecaClicada);
            fp.getJogada().setJogadaRecente(-1);
            if(this.jogoTerminou(peca)){
                fp.terminarJogo();
            }
        }
        
    }
    
    private void movePeca(JButton posicao){
        if(posicao.getBackground().equals(new Color(0,180,0))){
            JButton vazio=new PecaVazia();
            vazio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionPerformed(evt);
            }
            });
            
            if(this.peca instanceof PecaPeaoBranco){
                ((PecaPeaoBranco)this.peca).setMexeu(true);
            }
            
            if(this.peca instanceof PecaPeaoPreto){
                ((PecaPeaoPreto)this.peca).setMexeu(true);
            }
            
            vazio.setLocation(this.peca.getLocation());
            this.peca.setLocation(posicao.getLocation());
            
            int i=this.pecas.indexOf(posicao);
            int j=this.pecas.indexOf(this.peca);
            
            this.pecas.remove(i);
            this.pecas.add(i,this.peca);
            this.pecas.remove(j);
            this.pecas.add(j,vazio);
            
            
            this.remove(this.peca);
            this.remove(posicao);
            
            //this.peca.setLocation(posicao.getLocation());
            this.add(this.peca);
            this.add(vazio);
            
            this.repaint();
            
            if(fp.getJogadorDaVez()==0){
                fp.setJogadorDaVez(1);
            }else{
                fp.setJogadorDaVez(0);
            }
            
            fp.getJogada().setJogador(fp.getJogadores().get(fp.getJogadorDaVez()));
            fp.trocaJogador();
        }
        this.limparIluminados();
        this.pintarTabuleiro();
    }
   
    private void iluminaCaminho(JButton pecaEmMovimento){
        
        limparIluminados();
        
        if(pecaEmMovimento instanceof PecaPeaoBranco){
            this.verificaTrajetóriaPeaoBranco((PecaPeaoBranco)pecaEmMovimento);
            
        }else if(pecaEmMovimento instanceof PecaPeaoPreto){
            this.verificaTrajetóriaPeaoPreto((PecaPeaoPreto)pecaEmMovimento);
            
        }else if(pecaEmMovimento instanceof PecaBispoBranco){
            this.verificaTrajetoriaBispoBranco(pecaEmMovimento);
            
        }else if(pecaEmMovimento instanceof PecaBispoPreto){
            verificaTrajetoriaBispoPreto(pecaEmMovimento);
        }else if(pecaEmMovimento instanceof PecaTorreBranco){
            verificaTrajetoriaTorreBranco(pecaEmMovimento);
        }else if(pecaEmMovimento instanceof PecaTorrePreto){
            verificaTrajetoriaTorrePreto(pecaEmMovimento);
        }else if(pecaEmMovimento instanceof PecaCavaloBranco){
            verificaTrajetoriaCavaloBranco(pecaEmMovimento);
        }else if(pecaEmMovimento instanceof PecaCavaloPreto){
            verificaTrajetoriaCavaloPreto(pecaEmMovimento);
        }else if(pecaEmMovimento instanceof PecaRainhaBranco){
            verificaTrajetoriaRainhaBranco(pecaEmMovimento);
        }else if(pecaEmMovimento instanceof PecaRainhaPreto){
            verificaTrajetoriaRainhaPreto(pecaEmMovimento);
        }else if(pecaEmMovimento instanceof PecaReiBranco){
            verificaTrajetoriaReiBranco(pecaEmMovimento);
        }else if(pecaEmMovimento instanceof PecaReiPreto){
            verificaTrajetoriaReiPreto(pecaEmMovimento);
        }
        this.peca=pecaEmMovimento;
        fp.getJogada().setJogadaRecente(0);
        this.repaint();
    }
    
    private void verificaTrajetóriaPeaoBranco(PecaPeaoBranco peao){
        int temp=0;
        int jogadas=0;
        JButton bt=null;
        boolean flag=true;
        int x=peao.getX();
        int y=peao.getY();
        
        int qtdCasas = 2;
        
        if(peao.isMexeu()){
            qtdCasas = 1;
        }
        
        while(flag && jogadas < qtdCasas){
            
            y+=50;
            temp=this.getPeca(x, y);
            if(temp!=-1){
                bt=this.pecas.get(temp);
                    if(bt instanceof PecaVazia){
                        iluminar(temp);
                        jogadas++;
                    }else if(bt.getClass().toString().contains("Preto")){
                        flag=false;
                        //iluminar(temp);
                        //jogadas++;
                    }else{
                        flag=false;
                    }
            }else{
                flag=false;
            }
        }
                
        for(int i=0;i<2;i++){
            
            x=peao.getX();
            y=peao.getY();
        
            if(i==0){
                y+=50;
                x+=50;
            }else{
                y+=50;
                x-=50;
            }
                
            temp = this.getPeca(x, y);
                
            if(temp!=-1){
                
                bt=this.pecas.get(temp);
                
                if(bt.getClass().toString().contains("Preto")){
                    iluminar(temp);
                }
                
            }
            
        }
        
    }
    
    private void verificaTrajetóriaPeaoPreto(PecaPeaoPreto peao){
        int temp=0;
        int jogadas=0;
        JButton bt=null;
        boolean flag=true;
        int x=peao.getX();
        int y=peao.getY();
        
        int qtdCasas = 2;
        
        if(peao.isMexeu()){
            qtdCasas = 1;
        }
        
        while(flag && jogadas < qtdCasas){
            y-=50;
            temp=this.getPeca(x, y);
            if(temp!=-1){
                bt=this.pecas.get(temp);
                    if(bt instanceof PecaVazia){
                        iluminar(temp);
                        jogadas++;
                    }else if(bt.getClass().toString().contains("Branco")){
                        flag=false;
                        //iluminar(temp);
                        //jogadas++;
                    }else{
                        flag=false;
                    }
            }else{
                flag=false;
            }
        }
        for(int i=0;i<2;i++){
            
            x=peao.getX();
            y=peao.getY();
        
            if(i==0){
                y-=50;
                x-=50;
            }else{
                y-=50;
                x+=50;
            }
                
            temp = this.getPeca(x, y);
                
            if(temp!=-1){
                
                bt=this.pecas.get(temp);
                
                if(bt.getClass().toString().contains("Branco")){
                    iluminar(temp);
                }
                
            }
            
        }
        
    }
    
    private void verificaTrajetoriaBispoBranco(JButton bispo){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=bispo.getX();
        int y=bispo.getY();
        
        for(int i=0;i<4;i++){
            while(flag){
                if(i==0){
                    y+=50;
                    x+=50;
                }else if(i==1){
                    y-=50;
                    x-=50;
                }else if(i==2){
                    y-=50;
                    x+=50;
                }else{
                    y+=50;
                    x-=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                        if(bt instanceof PecaVazia){
                            iluminar(temp);
                        }else if(bt.getClass().toString().contains("Preto")){
                            flag=false;
                            iluminar(temp);
                        }else{
                            flag=false;
                        }
                }else{
                    flag=false;
                }
            }
            x=bispo.getX();
            y=bispo.getY();
            flag=true;
        }
    }
    
    private void verificaTrajetoriaBispoPreto(JButton bispo){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=bispo.getX();
        int y=bispo.getY();
        
        for(int i=0;i<4;i++){
            while(flag){
                if(i==0){
                    y+=50;
                    x+=50;
                }else if(i==1){
                    y-=50;
                    x-=50;
                }else if(i==2){
                    y-=50;
                    x+=50;
                }else{
                    y+=50;
                    x-=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                        if(bt instanceof PecaVazia){
                            iluminar(temp);
                        }else if(bt.getClass().toString().contains("Branco")){
                            flag=false;
                            iluminar(temp);
                        }else{
                            flag=false;
                        }
                }else{
                    flag=false;
                }
            }
            x=bispo.getX();
            y=bispo.getY();
            flag=true;
        }
    }
    
    private void verificaTrajetoriaTorreBranco(JButton torre){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=torre.getX();
        int y=torre.getY();
        
        for(int i=0;i<4;i++){
            while(flag){
                if(i==0){
                    y+=50;
                }else if(i==1){
                    y-=50;
                }else if(i==2){
                    x+=50;
                }else{
                    x-=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                        if(bt instanceof PecaVazia){
                            iluminar(temp);
                        }else if(bt.getClass().toString().contains("Preto")){
                            flag=false;
                            iluminar(temp);
                        }else{
                            flag=false;
                        }
                }else{
                    flag=false;
                }
            }
            x=torre.getX();
            y=torre.getY();
            flag=true;
        }
    }
    
    private void verificaTrajetoriaTorrePreto(JButton torre){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=torre.getX();
        int y=torre.getY();
        
        for(int i=0;i<4;i++){
            while(flag){
                if(i==0){
                    y+=50;
                }else if(i==1){
                    y-=50;
                }else if(i==2){
                    x+=50;
                }else{
                    x-=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                        if(bt instanceof PecaVazia){
                            iluminar(temp);
                        }else if(bt.getClass().toString().contains("Branco")){
                            flag=false;
                            iluminar(temp);
                        }else{
                            flag=false;
                        }
                }else{
                    flag=false;
                }
            }
            x=torre.getX();
            y=torre.getY();
            flag=true;
        }
    }
    
    private void verificaTrajetoriaCavaloBranco(JButton cavalo){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=cavalo.getX();
        int y=cavalo.getY();
        
        for(int i=0;i<8;i++){
                if(i==0){
                    y+=100;
                    x+=50;
                }else if(i==1){
                    y-=100;
                    x-=50;
                }else if(i==2){
                    y-=50;
                    x-=100;
                }else if(i==3){
                    y+=50;
                    x+=100;
                }else if(i==4){
                    y-=100;
                    x+=50;
                }else if(i==5){
                    y-=50;
                    x+=100;
                }else if(i==6){
                    x-=50;
                    y+=100;
                }else if(i==7){
                    x-=100;
                    y+=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                    if(bt instanceof PecaVazia||bt.getClass().toString().contains("Preto")){
                        iluminar(temp);
                    }
                }
            x=cavalo.getX();
            y=cavalo.getY();
        }
    }
        
    private void verificaTrajetoriaCavaloPreto(JButton cavalo){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=cavalo.getX();
        int y=cavalo.getY();
        
        for(int i=0;i<8;i++){
                if(i==0){
                    y+=100;
                    x+=50;
                }else if(i==1){
                    y-=100;
                    x-=50;
                }else if(i==2){
                    y-=50;
                    x-=100;
                }else if(i==3){
                    y+=50;
                    x+=100;
                }else if(i==4){
                    y-=100;
                    x+=50;
                }else if(i==5){
                    y-=50;
                    x+=100;
                }else if(i==6){
                    x-=50;
                    y+=100;
                }else if(i==7){
                    x-=100;
                    y+=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                    if(bt instanceof PecaVazia||bt.getClass().toString().contains("Branco")){
                        iluminar(temp);
                    }
                }
            x=cavalo.getX();
            y=cavalo.getY();
        }
}
    
    private void verificaTrajetoriaRainhaBranco(JButton rainha){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=rainha.getX();
        int y=rainha.getY();
        
        for(int i=0;i<8;i++){
            while(flag){
                if(i==0){
                    y+=50;
                }else if(i==1){
                    y-=50;
                }else if(i==2){
                    x+=50;
                }else if(i==3){
                    x-=50;
                }else if(i==4){
                    y+=50;
                    x+=50;
                }else if(i==5){
                    y-=50;
                    x-=50;
                }else if(i==6){
                    y-=50;
                    x+=50;
                }else{
                    y+=50;
                    x-=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                        if(bt instanceof PecaVazia){
                            iluminar(temp);
                        }else if(bt.getClass().toString().contains("Preto")){
                            flag=false;
                            iluminar(temp);
                        }else{
                            flag=false;
                        }
                }else{
                    flag=false;
                }
            }
            x=rainha.getX();
            y=rainha.getY();
            flag=true;
        }
    }
    
    private void verificaTrajetoriaRainhaPreto(JButton rainha){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=rainha.getX();
        int y=rainha.getY();
        
        for(int i=0;i<8;i++){
            while(flag){
                if(i==0){
                    y+=50;
                }else if(i==1){
                    y-=50;
                }else if(i==2){
                    x+=50;
                }else if(i==3){
                    x-=50;
                }else if(i==4){
                    y+=50;
                    x+=50;
                }else if(i==5){
                    y-=50;
                    x-=50;
                }else if(i==6){
                    y-=50;
                    x+=50;
                }else{
                    y+=50;
                    x-=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                        if(bt instanceof PecaVazia){
                            iluminar(temp);
                        }else if(bt.getClass().toString().contains("Branco")){
                            flag=false;
                            iluminar(temp);
                        }else{
                            flag=false;
                        }
                }else{
                    flag=false;
                }
            }
            x=rainha.getX();
            y=rainha.getY();
            flag=true;
        }
    }
    
    private void verificaTrajetoriaReiBranco(JButton rei){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=rei.getX();
        int y=rei.getY();
        
        for(int i=0;i<8;i++){
                if(i==0){
                    y+=50;
                }else if(i==1){
                    y-=50;
                }else if(i==2){
                    x-=50;
                }else if(i==3){
                    x+=50;
                }else if(i==4){
                    y-=50;
                    x+=50;
                }else if(i==5){
                    y+=50;
                    x-=50;
                }else if(i==6){
                    x-=50;
                    y-=50;
                }else if(i==7){
                    x+=50;
                    y+=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                    if(bt instanceof PecaVazia||bt.getClass().toString().contains("Preto")){
                        iluminar(temp);
                    }
                }
            x=rei.getX();
            y=rei.getY();
        }
    }
    
    private void verificaTrajetoriaReiPreto(JButton rei){
        int temp=0;
        JButton bt=null;
        boolean flag=true;
        int x=rei.getX();
        int y=rei.getY();
        
        for(int i=0;i<8;i++){
                if(i==0){
                    y+=50;
                }else if(i==1){
                    y-=50;
                }else if(i==2){
                    x-=50;
                }else if(i==3){
                    x+=50;
                }else if(i==4){
                    y-=50;
                    x+=50;
                }else if(i==5){
                    y+=50;
                    x-=50;
                }else if(i==6){
                    x-=50;
                    y-=50;
                }else if(i==7){
                    x+=50;
                    y+=50;
                }
                temp=this.getPeca(x, y);
                if(temp!=-1){
                    bt=this.pecas.get(temp);
                    if(bt instanceof PecaVazia||bt.getClass().toString().contains("Branco")){
                        iluminar(temp);
                    }
                }
            x=rei.getX();
            y=rei.getY();
        }
    }
    
    private void iluminar(int indice){
        this.pecas.get(indice).setBackground(new Color(0,180,0));
    }
    
    private void limparIluminados(){
        
        for(int i=0;i<this.pecas.size();i++){
            if(this.pecas.get(i).getBackground().equals(new Color(0,180,0))){
                this.pecas.get(i).setBackground(new Color(255,255,255));
            }
        }
    }

    private int getPeca(int x,int y){
        int temp=-1;
        for(int i=0;i<this.pecas.size();i++){
            if(this.pecas.get(i).getX()==x&&this.pecas.get(i).getY()==y){
                temp=i;
            }
        }
        return temp;
    }
    
    private boolean jogoTerminou(JButton peca){
        boolean flag=true;
        for(int i=0;i<this.pecas.size();i++){
            if(peca.getClass().toString().contains("Branco")){
                if(this.pecas.get(i) instanceof PecaReiPreto){
                    flag=false;
                }
            }else{
                if(this.pecas.get(i) instanceof PecaReiBranco){
                    flag=false;
                }
            }
        }
        if(flag){
            desabilitaPecas();
        }
        return flag;
    }
    private void desabilitaPecas(){
        for(int i=0;i<this.pecas.size();i++){
            this.pecas.get(i).setEnabled(false);
        }
    }
  
}
